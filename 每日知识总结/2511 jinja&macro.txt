jinja2:

1. Python下应用的模板引擎
他的设计思想来源于Django的模板引擎，并扩展了其语法和一系列强大的功能。其中最显著的一个是增加了沙箱执行功能和可选的自动转义功能，这对大多应用的安全性来说是非常重要的。

2. 模板文件
eg. <h1>hello,{{name}}.</h1>
这个用{{......}}括起来的部分就是模板表达式。在使用render_template函数调用模板文件hello.html时，需要通过关键字参数指定name值。

==> render_template('hello.html',name='star')

3. 常用语法

	- 变量显示语法: {{ 变量名 }}

	- for循环:

		{% for i in li%}

		{% endfor %}

	- if语句

		{% if user == 'westos'%}

		{% elif user == 'hello' %}

		{% else %}

		{% endif%}

	- 基本语法：

		* 语句 {% ... %}
		* 变量 {{ ... }}
		* 注释 {# ... #}



宏 Macro：

1. 在编写python程序时，会有很多地方调用同样或类似的代码。这种情况，可以把重复使用的代码放到函数或类中，只需要访问函数或类的实例就可以实现代码复用。Jinja2 模板中使用宏来防止代码冗余。

2. Jinja2 模板中的宏需要放到{%......%}，使用修饰，支持参数，并且使用{% endmacro %}结束


3. 宏的介绍
是一种批量处理的称谓

计算机科学里的宏是一种抽象（Abstraction），它根据一系列预定义的规则替换一定的文本模式。解释器或编译器在遇到宏时会自动进行这一模式替换。对于编译语言，宏展开在编译时发生，进行宏展开的工具常被称为宏展开器























